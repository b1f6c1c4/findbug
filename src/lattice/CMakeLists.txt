project(lattice)

if(EMSCRIPTEN)
    option(JS_ONLY "Compiles to native JS (No WASM)" OFF)
endif(EMSCRIPTEN)

add_compile_options(-Wall -Wextra -pedantic -Werror)
add_compile_options(-O3)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED True)

add_executable(lattice main.cpp util.hpp elem.hpp elem.cpp homo_set.hpp homo_set.cpp tri_set.hpp tri_set.cpp)

if(EMSCRIPTEN)
    message(STATUS "Using emcmake cmake")
    add_compile_options(-flto)
    list(APPEND EM_FLAGS -O3)
    list(APPEND EM_FLAGS --bind)
    list(APPEND EM_FLAGS -s MODULARIZE)
    list(APPEND EM_FLAGS -s "EXPORTED_RUNTIME_METHODS='[ccall]'")
    list(APPEND EM_FLAGS -s ALLOW_MEMORY_GROWTH=1)
    list(JOIN EM_FLAGS " " EM_FLAGS_S)
    message(STATUS "Flags: ${EM_FLAGS_S}")
    if(JS_ONLY)
        message(STATUS "Setting compilation target to native JavaScript")
        set(CMAKE_EXECUTABLE_SUFFIX ".js")
        set_target_properties(lattice PROPERTIES LINK_FLAGS "-s WASM=0 ${EM_FLAGS_S}")
    else(JS_ONLY)
        message(STATUS "Setting compilation target to WASM")
        set(CMAKE_EXECUTABLE_SUFFIX ".wasm.js")
        set_target_properties(lattice PROPERTIES LINK_FLAGS "-s WASM=1 ${EM_FLAGS_S}")
    endif(JS_ONLY)
else(EMSCRIPTEN)
    message(STATUS "Using regular cmake")
endif(EMSCRIPTEN)
